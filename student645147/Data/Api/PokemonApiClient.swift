////  PokemonApiClient.swift//  student645147////  Created by user270892 on 1/16/25.//import Foundationclass PokemonApiClient {    static let shared = PokemonApiClient()    func fetchPokemons(completion: @escaping (Result<Data, Error>) -> Void) {        guard let url = URL(string: "https://pokeapi.co/api/v2/pokemon/?limit=20") else {            completion(.failure(ApiError.invalidURL))            return        }        fetchData(from: url, completion: completion)    }    func fetchPokemonDetail(for id: Int, completion: @escaping (Result<Data, Error>) -> Void) {        guard let url = URL(string: "https://pokeapi.co/api/v2/pokemon/\(id)") else {            completion(.failure(ApiError.invalidURL))            return        }        fetchData(from: url, completion: completion)    }    private func fetchData(from url: URL, completion: @escaping (Result<Data, Error>) -> Void) {        URLSession.shared.dataTask(with: url) { data, response, error in            if let error = error {                completion(.failure(error))                return            }            guard let data = data else {                completion(.failure(ApiError.noData))                return            }            completion(.success(data))        }.resume()    }    enum ApiError: Error {        case invalidURL        case noData    }}
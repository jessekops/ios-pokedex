import SwiftUIstruct PokemonCardView: View {    let pokemon: Pokemon    @State private var isSharing = false    var body: some View {        NavigationLink(destination: PokemonDetailView(pokemonID: pokemon.id)) {            VStack {                VStack {                    HStack {                        Text(String(format: "%03d", pokemon.id))                            .font(.caption)                            .fontWeight(.bold)                            .foregroundColor(.white)                            .padding(6)                            .background(Color(hex: "#5631E8"))                            .cornerRadius(4)                            .frame(width: 40, alignment: .leading)                                                Spacer()                    }                                        AsyncImage(url: URL(string: pokemon.imageUrl)) { image in                        image.resizable().scaledToFit()                    } placeholder: {                        ProgressView()                    }                    .frame(width: 120, height: 120)                }                .padding(.top, 10)                .padding(.horizontal)                .background(Color(hex: "#F6F6FF"))                HStack {                    Text(pokemon.name.capitalized)                        .font(.headline)                        .foregroundColor(Color(hex: "#0E0940"))                        .lineLimit(1)                        .truncationMode(.tail)                                        Spacer()                                        Button(action: {                        isSharing = true                    }) {                        Image(systemName: "ellipsis")                            .foregroundColor(Color(hex: "#0E0940"))                            .rotationEffect(.degrees(90))                    }                    .sheet(isPresented: $isSharing) {                        ShareSheet(activityItems: [                            "Check out this PokÃ©mon: \(pokemon.name.capitalized)!",                            URL(string: pokemon.imageUrl) ?? ""                        ])                    }                }                .padding()                .background(Color.white)                .frame(maxWidth: .infinity)            }            .background(Color(hex: "#F6F6FF"))            .cornerRadius(10)            .shadow(color: .gray.opacity(0.2), radius: 5, x: 0, y: 5)        }        .buttonStyle(PlainButtonStyle())    }}struct ShareSheet: UIViewControllerRepresentable {    var activityItems: [Any]    func makeUIViewController(context: Context) -> UIActivityViewController {        UIActivityViewController(activityItems: activityItems, applicationActivities: nil)    }    func updateUIViewController(_ uiViewController: UIActivityViewController, context: Context) {}}
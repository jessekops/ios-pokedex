////  PokemonDetailView.swift//  student645147////  Created by user271057 on 11/18/24.//import SwiftUIstruct PokemonDetailView: View {    let pokemonID: Int    @StateObject private var viewModel = PokemonDetailViewModel()        var body: some View {        VStack(spacing: 20) {            if viewModel.isLoading {                ProgressView("Loading PokÃ©mon Details...")                    .progressViewStyle(CircularProgressViewStyle())                    .padding()            } else if let error = viewModel.errorMessage {                VStack {                    Text(error)                        .foregroundColor(.red)                        .padding()                                        Button(action: {                        viewModel.fetchPokemonDetail(for: pokemonID)                    }) {                        Text("Retry")                            .fontWeight(.bold)                            .foregroundColor(.white)                            .padding()                            .background(Color.blue)                            .cornerRadius(8)                    }                    .padding(.top)                }            } else {                VStack(spacing: 20) {                    HStack {                        Text(viewModel.pokemonDetail?.name.capitalized ?? "")                            .font(.title2)                            .fontWeight(.bold)                            .foregroundColor(Color(hex: "#0E0940"))                                                Spacer()                                                Text("#\(String(format: "%03d", viewModel.pokemonDetail?.id ?? 0))")                            .font(.title2)                            .foregroundColor(Color.gray)                    }                    .padding([.top, .horizontal])                                        if let types = viewModel.pokemonDetail?.types {                        HStack(spacing: 10) {                            ForEach(types, id: \.self) { type in                                Text(type.capitalized)                                    .fontWeight(.bold)                                    .foregroundColor(Color(hex: "#0E0940"))                                    .padding(.vertical, 5)                                    .padding(.horizontal, 10)                                    .background(Color(hex: "#2AF9C9"))                                    .cornerRadius(8)                            }                        }                        .frame(maxWidth: .infinity, alignment: .leading)                        .padding(.horizontal)                    }                                        AsyncImage(url: URL(string: "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/\(pokemonID).png")) { image in                        image.resizable().scaledToFit()                    } placeholder: {                        ProgressView()                    }                    .frame(width: 150, height: 150)                    .padding(.top)                                        ScrollView {                        VStack(alignment: .leading, spacing: 10) {                            Text("About")                                .font(.headline)                                .fontWeight(.bold)                                .foregroundColor(Color(hex: "#0E0940"))                                .padding(.bottom, 5)                                .frame(maxWidth: .infinity, alignment: .center)                                                        if let detail = viewModel.pokemonDetail {                                VStack(alignment: .leading, spacing: 10) {                                    aboutRow(label: "Name", value: detail.name.capitalized)                                    aboutRow(label: "ID", value: "\(detail.id)")                                    aboutRow(label: "Weight", value: "\(detail.weight)kg")                                    aboutRow(label: "Height", value: "\(detail.height)m")                                    aboutRow(label: "Types", value: detail.types.joined(separator: ", "))                                    aboutRow(label: "Abilities", value: detail.abilities.joined(separator: ", "))                                }                            }                        }                        .padding(16)                    }                    .background(Color.white)                    .frame(maxHeight: .infinity)                }            }        }        .background(Color(hex: "#EDF6FF"))        .onAppear {            viewModel.fetchPokemonDetail(for: pokemonID)        }        .navigationBarItems(trailing: HStack {            Button(action: {                viewModel.toggleFavorite()            }) {                Image(systemName: viewModel.isFavorite ? "heart.fill" : "heart")                    .foregroundColor(.red)            }        })    }        private func aboutRow(label: String, value: String) -> some View {        HStack {            Text(label)                .fontWeight(.bold)                .foregroundColor(Color(hex: "#0E0940"))                .frame(width: 100, alignment: .leading)            Text(value)                .foregroundColor(.gray)                .frame(maxWidth: .infinity, alignment: .trailing)            Spacer()        }    }}
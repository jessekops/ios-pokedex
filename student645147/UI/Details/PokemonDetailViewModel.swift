////  PokemonDetailViewModel.swift//  student645147////  Created by user271057 on 11/18/24.//import Foundationclass PokemonDetailViewModel: ObservableObject {    @Published var pokemonDetail: PokemonDetail?    @Published var isLoading = false    @Published var errorMessage: String?    @Published var isFavorite: Bool = false    private let repository = PokemonDetailRepository()    func fetchPokemonDetail(for id: Int) {        isLoading = true        errorMessage = nil        repository.getPokemonDetail(for: id) { [weak self] result in            DispatchQueue.main.async {                self?.isLoading = false                switch result {                case .success(let detail):                    self?.pokemonDetail = detail                    self?.isFavorite = self?.repository.isFavorite(id: id) ?? false                case .failure(let error):                    self?.errorMessage = "Failed to load details: \(error.localizedDescription)"                }            }        }    }    func toggleFavorite() {        guard let id = pokemonDetail?.id else { return }        isFavorite = repository.toggleFavorite(id: id)    }}
////  PokemonViewModel.swift//  student645147////  Created by user271057 on 11/18/24.//import Foundationclass PokemonViewModel: ObservableObject {    @Published var pokemons: [Pokemon] = []    @Published var isLoading: Bool = false    @Published var error: String? = nil        func fetchPokemons() {        self.isLoading = true        self.error = nil                guard let url = URL(string: "https://pokeapi.co/api/v2/pokemon/?limit=20") else {            self.error = "Invalid URL"            self.isLoading = false            return        }                URLSession.shared.dataTask(with: url) { data, response, error in            guard let data = data, error == nil else {                DispatchQueue.main.async {                    self.error = "Error fetching Pokémon: \(error?.localizedDescription ?? "Unknown error")"                    self.isLoading = false                }                return            }                        do {                let response = try JSONDecoder().decode(PokemonResponse.self, from: data)                DispatchQueue.main.async {                    self.pokemons = ModelMapper.mapResponseToPokemon(response: response)                    self.isLoading = false                }            } catch {                DispatchQueue.main.async {                    self.error = "Error decoding Pokémon response: \(error.localizedDescription)"                    self.isLoading = false                }            }        }.resume()    }}